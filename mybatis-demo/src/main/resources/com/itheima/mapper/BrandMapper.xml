<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
namespace:名称空间-->
<mapper namespace="com.itheima.mapper.BrandMapper">
    <!--Statement-->
    <!--
          id : 唯一标识
          type: 映射类型,支持别名
    -->
    <resultMap id="brandResultMap" type="brand">
        <!--
            id: 完成主键字段的映射
                column : 表的别名
                property : 实体名
            result 完成一般字段的映射
                column : 表的别名
                property : 实体名
        -->
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>

    <!--sql片段-->
    <!--sql id="brand_column">-->
    <!--    select id, brand_name brandName, company_name companyName, orderby, description, status-->
    <!--</sql>-->

    <!--查询所有-->
    <select id="selectAll" resultMap="brandResultMap">
        select *
        from tb_brand;
    </select>
    <!--    <select id="selectAll" resultType="Brand">-->
    <!--        <include refid="brand_column"></include>-->
    <!--        from tb_brand;-->
    <!--    </select>-->

    <!--查询某id对应的商品-->
    <!--
        占位符
        1 #{} : 会将其替换为 ? 防止sql注入
        2 ${} : 拼SQL语句 SQL注入
            表明或者列名在不固定的时候使用
    -->
    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand
        where id = #{id};
    </select>
    <!--    <select id="selectByCondition" resultMap="brandResultMap">-->
    <!--        select *-->
    <!--        from tb_brand-->
    <!--        where-->
    <!--            status=#{status}-->
    <!--        and company_name like #{companyName}-->
    <!--        and brand_name like #{brandName}-->
    <!--    </select>-->
    <!--
        动态查询
            * if 条件查询
                   * test :逻辑表达式
            * 逻辑恒等式
    -->
    <!--    <select id="selectByCondition" resultMap="brandResultMap">-->
    <!--        select *-->
    <!--        from tb_brand-->
    <!--        where 1=1-->
    <!--        <if test="status != null">-->
    <!--            and status = #{status}-->
    <!--        </if>-->
    <!--        <if test="companyName != null and companyName != ''">-->
    <!--            and company_name like #{companyName}-->
    <!--        </if>-->
    <!--        <if test="brandName != null and brandName != ''">-->
    <!--            and brand_name like #{brandName}-->
    <!--        </if>-->
    <!--    </select>-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        # where 1=1
        # where标签替换
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="companyName != null and companyName != ''">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName != ''">
                and brand_name like #{brandName}
            </if>
        </where>

    </select>

    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <choose>
                <when test="status != null">
                    status = #{status}
                </when>
                <when test="companyName != null and companyName != ''">
                    company_name like #{companyName}
                </when>
                <when test="brandName != null and brandName != ''">
                    brand_name like #{brandName}
                </when>
            </choose>
        </where>

    </select>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name, company_name, orderby, description, status)
        values (#{brandName}, #{companyName}, #{orderby}, #{description}, #{status})
    </insert>

    <update id="update">
        update tb_brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="orderby != null">
                orderby = #{orderby},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null ">
                status = #{status},
            </if>
        </set>
        where id = #{id};
    </update>
    <delete id="deleteById">
        delete
        from tb_brand
        where id = #{id}
    </delete>
    <delete id="deleteByIds">
        delete from tb_brand
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        ;

    </delete>


</mapper>